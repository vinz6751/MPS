' Programme d'extraction des bidules et pacmans
' Vinz / MPS
'
' Variables globales
' fichier d'entr‚e (PI1 non compress‚)
fichier$=""
' dossier de sortie (pr‚fix‚ … tous les fichiers g‚n‚r‚s)
dossier$="f:\mps\god\elite\"
' Variables de travail
image$=STRING$(32000,0)
'
'
fichier$=dossier$+"bidules.pi1"
' @extraction_chunky("atari.bmp",90,13,135,56)
' @extraction_chunky("bidules.bmp",257,2,314,57)
' @extraction_chunky("pacmano.bmp",24,157,49,180)
' @extraction_chunky("pacmanf.bmp",56,157,82,180)
' @extraction_chunky("fantomes.bmp",86,157,208,180)
' @extraction_chunky("ppacmano.bmp",18,100,29,110)
' @extraction_chunky("ppacmanf.bmp",33,100,44,110)
' @extraction_chunky("pfantome.bmp",47,100,104,110)
' @extraction_chunky("pacgomme.bmp",4,195,25,198)
'
' Extraction lignes
fichier$=dossier$+"line.pi1"
@extraction_planar("line1.bmp",0,0,319,0)
' @extraction_planar("line2.bmp",0,13,319,17)
'
'
PROCEDURE extraction_chunky(fichier_sortie$,x1&,y1&,x2&,y2&)
  LOCAL ecran$
  LOCAL oldrez%
  LOCAL sortie$
  LOCAL w&,h&
  LOCAL longueur_sortie&
  LOCAL i_sortie&
  LOCAL ix&,iy&
  '
  ' r‚serve m‚moire pour charger l'image
  SGET ecran$
  oldrez%=XBIOS(4)
  ~XBIOS(5,L:-1;L:-1,W:0) ! ST-BASSE
  '
  ' charge le fichier
  OPEN "I",#1,fichier$
  SEEK #1,34 ! Ignore la palette
  BGET #1,VARPTR(image$),32000
  CLOSE #1
  '
  ' Affiche l'image pour que POINT fonctionne
  SPUT image$
  '
  ' cr‚e le fichier de sortie et ‚crit l'en-tˆte (w et h)
  '
  w&=x2&-x1&+1
  h&=y2&-y1&+1
  longueur_sortie&=4+w&*h& ! 4 est la longueur de l'en-tˆte
  sortie$=STRING$(longueur_sortie&,0)
  '
  ' ‚crit l'en-tˆte
  DPOKE VARPTR(sortie$),w&
  DPOKE VARPTR(sortie$)+2,h&
  i_sortie&=4 ! 2*sizeof(word)
  '
  ' ‚crit un octet par pixel avec le num‚ro de couleur
  FOR iy&=y1& TO y2&
    FOR ix&=x1& TO x2&
      POKE VARPTR(sortie$)+i_sortie&,@hard2vdi(POINT(ix&,iy&))
      INC i_sortie&
    NEXT ix&
  NEXT iy&
  '
  ' enregistre le r‚sultat
  BSAVE dossier$+fichier_sortie$,VARPTR(sortie$),longueur_sortie&
  '
  ' restaure l'‚cran
  ~XBIOS(5,L:oldscreen%,L:oldscreen%,W:oldrez%)
  SPUT ecran$
RETURN
'
PROCEDURE extraction_planar(fichier_sortie$,x1&,y1&,x2&,y2&)
  LOCAL ecran$
  LOCAL oldrez%
  LOCAL sortie$
  LOCAL longueur_sortie&
  LOCAL i_sortie&
  LOCAL ix&,iy&
  LOCAL yoffset&
  LOCAL fb%
  '
  ' r‚serve m‚moire pour charger l'image
  SGET ecran$
  oldrez%=XBIOS(4)
  ~XBIOS(5,L:-1;L:-1,W:0) ! ST-BASSE
  '
  ' charge le fichier
  OPEN "I",#1,fichier$
  SEEK #1,34 ! Ignore la palette
  BGET #1,VARPTR(image$),32000
  CLOSE #1
  '
  ' Affiche l'image pour que POINT fonctionne
  SPUT image$
  '
  ' cr‚e le fichier de sortie
  '
  fb%=XBIOS(3) ! adresse de l'‚cran
  longueur_sortie&=160
  sortie$=STRING$(320,0)
  i_sortie&=4 ! 2*sizeof(word)
  '
  ' ‚crit un octet par pixel avec le num‚ro de couleur
  FOR iy&=y1& TO y2&
    yoffset=@line_address(fb%,iy&)
    FOR ix&=0 TO 320-2 STEP 2
      DPOKE VARPTR(sortie$)+i_sortie&,DPEEK(fb%+yoffset%+ix&)
      i_sortie&=i_sortie&+2
    NEXT ix&
  NEXT iy&
  '
  ' enregistre le r‚sultat
  BSAVE dossier$+fichier_sortie$,VARPTR(sortie$),longueur_sortie&
  '
  ' restaure l'‚cran
  ~XBIOS(5,L:oldscreen%,L:oldscreen%,W:oldrez%)
  SPUT ecran$
RETURN
'
FUNCTION line_address(fb%,y&)
  RETURN fb%+y&*160
ENDFUNC
'
FUNCTION vdi2hard(c|)
  SELECT c|
  CASE 0
    RETURN 0
  CASE 1
    RETURN 2
  CASE 2
    RETURN 3
  CASE 3
    RETURN 6
  CASE 4
    RETURN 4
  CASE 5
    RETURN 7
  CASE 6
    RETURN 5
  CASE 7
    RETURN 8
  CASE 8
    RETURN 9
  CASE 9
    RETURN 10
  CASE 10
    RETURN 11
  CASE 11
    RETURN 14
  CASE 12
    RETURN 12
  CASE 13
    RETURN 15
  CASE 14
    RETURN 13
  CASE 15
    RETURN 1
  ENDSELECT
ENDFUNC
'
'
FUNCTION hard2vdi(c|)
  SELECT c|
  CASE 0
    RETURN 0
  CASE 1
    RETURN 15
  CASE 2
    RETURN 1
  CASE 3
    RETURN 2
  CASE 4
    RETURN 4
  CASE 5
    RETURN 6
  CASE 6
    RETURN 3
  CASE 7
    RETURN 5
  CASE 8
    RETURN 7
  CASE 9
    RETURN 8
  CASE 10
    RETURN 9
  CASE 11
    RETURN 10
  CASE 12
    RETURN 12
  CASE 13
    RETURN 14
  CASE 14
    RETURN 11
  CASE 15
    RETURN 13
  ENDSELECT
ENDFUNC
